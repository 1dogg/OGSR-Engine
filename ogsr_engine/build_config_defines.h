#pragma once
// Для изменения настроек нужно создать папку build_config_overrides,
// скопировать этот файл в нее и изменить, как требуется.

//****************************************************************************************************
// Сборка в режиме совместимости с вальнильным ТЧ. Выключает специфичные для ОГСЕ правки и отладочные режимы
//#define SHOC_EDITION

//Хак, чтобы AppVeyor собирал именно SHOC_EDITION
#if __has_include("hack.appveyor")
#	pragma message("[AppVeyor] Enabled SHOC_EDITION mode!")
#	define SHOC_EDITION
#endif
//****************************************************************************************************

#define FSLTX "fsgame.ltx"

// Сколько последних сообщений показывать в истории ПДА
#define NEWS_TO_SHOW 500

// эффект Доплера для звука из xp-dev
//#define SND_DOPPLER_EFFECT

// Радиоактивные предметы в инвентаре будут увеличивать радиацию. Тоже самое
// касается предметов, которые ухудшают пси-здоровье, если определен
// AF_PSY_HEALTH.
//#define OBJECTS_RADIOACTIVE

// Артефакты с нулевым состоянием работать не будут.
#define AF_ZERO_CONDITION

// Влияение артефактов на сытость будет работать.
#define AF_SATIETY

// У артефактов будет свойство восстановления пси-здоровья.
#define AF_PSY_HEALTH

// Обрабатывать свойства артефактов для брони. Имеются ввиду всякие
// _restore_speed.
#define OUTFIT_AF

// Включает увеличение параметра snd_targets по мере необходимости,
// когда нужно будет проиграть звук, а сейчас уже проигрываются
// snd_targets звуков. По умолчанию, в этом случае, один из звуков
// выключается, тот, у которого наименьший приоритет.
#define DYNAMIC_SND_TARGETS

// Отключает возможность смены уровня сложности. Будет единственный уровень
// сложности, тот, который стоит по умолчанию, т.е. мастер.
//#define GD_MASTER_ONLY


//***********************************[Настройки отладочных режимов]***********************************
// Включает кастомное окно с сообщением об ошибках, выключает стандартное "Прекращена работа программы..."
#define USE_OWN_ERROR_MESSAGE_WINDOW

// Включает создание минидампов при вылетах
#define USE_OWN_MINI_DUMP

#ifndef SHOC_EDITION
// Включает новые отладочные сообщения и ассерты - LogDbg, MsgDbg, FuncDbg, ASSERT_FMT_DBG
#	define OGSR_TOTAL_DBG
#endif

// Включает вылет, если в vertex() будет передан не валидный вертекс. Совсем строгий режим, более строгий чем OGSR_TOTAL_DBG, поэтому отдельно.
//#define CRASH_ON_INVALID_VERTEX_ID

// Отключить все отладочные ассерты DEBUG конфигурации
// Это может пригодиться в случае, если нужно отлаживать какой-нибудь мод, но отладочную сборку с этим модом запустить нереально.
// Из-за того, что в модах зачастую всё очень криво сделано, ассерты будут срабатывать на каждый чих. Это и на ОГСЕ так, на солянке - думаю, ещё хуже.
// В этом случае нужно переключиться на DEBUG конфигурацию, и раскомментировать этот дефайн:
//#define DISABLE_DBG_ASSERTIONS

// Валидатор желательно использовать только при отладке проблем с памятью.
//#define USE_MEMORY_VALIDATOR
//****************************************************************************************************


#ifndef SHOC_EDITION
// Включает слоты ножа, бинокля, шлема, биорадара, ПНВ, детектора артефактов, фонаря
#	define OGSE_NEW_SLOTS

// ОГСЕ-специфичная система оружейного зума. С ванильным ТЧ несовместима без правки оружейных конфигов.
#	define OGSE_WPN_ZOOM_SYSTEM
#endif

#ifdef SHOC_EDITION
// Использовать старый режим для отрисовки экранов загрузки
#   define USE_LEGACY_LOAD_SCREENS
#endif

// Включает раскраску предметов в окне торговца.
//#define COLORIZE_OTHER_TRADE

// Выставлять для оружия состояние eSubstateIdleMoving при actor->is_actor_walking() || actor->is_actor_creeping() || actor->is_actor_crouching()
// Включает анимацию anim_idle_moving
#define MORE_WPN_IDLE_MOVING_STATES

// Цена оружия будет включать в себя стоимость установленных аддонов
//#define WPN_COST_INCLUDE_ADDONS

// Изменяет принцип работы дуплета для оружия на классе CWeaponShotgun
// Вместо дуплета по кнопке прицеливания, дуплет можно включить\выключить скриптом 
// Вкдючить\выключить - wpn:get_weapon_sg():switch_duplet()
// Проверить статус - wpn:get_weapon_sg().is_duplet_enabled
// Сделано для того, что бы сохранить возможность прицеливания
//#define DUPLET_STATE_SWITCH

// Флаг позволяющий для всех предметов реагировать на флаг FRuckDefault. 
// Если флаг установлен, хабар будет подбираться в рюкзак, а не в слот по
// умолчанию. Что бы все работало нормально, нужно добавить
//
// default_to_ruck = false
//
// как минимум в секцию [bolt]. Иначе не получится доставать и кидать болт.
// А для надежности, еще и в [device_pda], [device_torch] и в секции гранат.
//#define RUCK_FLAG_PREFERRED

// Real Wolf: блокировка перезарядки по время спринта.
//#define LOCK_RELOAD_IN_SPRINT

// Усложненный режим перезарядки. Патроны из оружия возвращаются в инвентарь
// и оружие заряжается из другой пачки с макс. кол-вом патронов. Если часто
// перезаряжаться, то через некоторое время в инвентаре будут только не полные
// пачки и оружие будет заряжаться не полностью. В пару с этим режимом
// желательно использовать ручной перепаковщик патронов, вместо
// автоматического.
//#define HARD_AMMO_RELOAD

// Включает учет параметра k_ap у патрона при расчета урона для НПС
// Формула такая же как при расчете урона для ГГ
// Может потребовать перенстройку конфигов патронов
//#define APPLY_ARMOR_PIERCING_TO_NPC

// В этом режиме удаление поршня, в котором указаны <article>, удалит и эти
// статьи.
//#define REMOVE_ARTICLES_ON_DISABLE_INFO
